/*Generated file from MCGenerator*/
package de.montigem.be.domain;

import java.time.ZonedDateTime;
import java.util.Optional;

classdiagram Domain{

  class DomainUser{
    String username;
    Optional<String> encodedPassword;
    String passwordSaltBase64;
    ZonedDateTime registrationDate;
    Optional<String> initials;
    DomainUserActivationStatus activated;
    boolean enabled;
    String email;
    Optional<String> timID;
  }

  class RoleAssignment{
    String role;
    String objClass;
    Optional<Long> objId;
    Optional<String> attribute;
  }

  class Sensor{
    String sensorId;
    SensorType type;
  }

  class SensorValue{
    ZonedDateTime timestamp;
    Float value;
  }

  class ZahlenWert{
    ZahlenTyp zahlenTyp;
    long wert;
  }

  class CPSError{
      Optional<String> sensorId;
      String errCode;
      String errMsg;
      String timeStamp;
      String source;
      List<String> recipients;
  }

  class EmailRecipients{
    List<String> recipients;
  }

  class AlarmCtrl{
    <<dbColumn="unique=true">>String serial = "0";
    int smokeCtrlMax = 0;
    int smokeCtrlMin = 0;
    Float tempCtrlMax = 0f;
    Float tempCtrlMin = 0f;
    boolean alarm = false;
  }

  class TempSensor{
    Float temp = 0f;
    String unit = "Celsius";
  }

  class SmokeSensor{
    int smoke = 0;
  }

  class SirenCtrl{
    boolean enabled = true;
    boolean sirenActive = false;
    boolean sirenOverride = false;
  }

  abstract class Adapter;

  class SmokeSensorSmoke_Adapter extends Adapter;

  class SirenCtrlSirenActive_Adapter extends Adapter;

  class TempSensorTemp_Adapter extends Adapter;

  enum DomainUserActivationStatus{
    AKTIVIERT,
    MAIL_NICHT_GESENDET,
    MAIL_FEHLERHAFT,
    MAIL_GESENDET;
  }

  enum SensorType{
    TEMPERATURE,
    ANGLE,
    PERCENT,
    LIGHT,
    CO2,
    MOTION;
  }

  enum ZahlenTyp{
    EURO,
    STUNDE,
    PROZENT,
    NONE;
  }

  enum RechnungsstellungStatus{
    OFFENE_RECHNUNG,
    SAP("SAP"),
    SAP_STORNIERT("SAP(Storniert)"),
    PLANUNG;
  }

  association  [*]  RoleAssignment -> (user) DomainUser  [1]  ;

  association  [1]  Sensor -> (value) SensorValue  [*]  ;

  association  [*]  AlarmCtrl <-> TempSensor  [*]  ;

  association  [1]  AlarmCtrl <-> SmokeSensor  [*]  ;

  association  [1]  AlarmCtrl -> SirenCtrl  [*]  ;

  association  [1]  SmokeSensorSmoke_Adapter -> SmokeSensor  [1]  ;

  association  [1]  SmokeSensorSmoke_Adapter -> AlarmCtrl  [1]  ;

  association  [1]  SirenCtrlSirenActive_Adapter -> SirenCtrl  [1]  ;

  association  [1]  SirenCtrlSirenActive_Adapter -> AlarmCtrl  [1]  ;

  association  [1]  TempSensorTemp_Adapter -> TempSensor  [1]  ;

  association  [1]  TempSensorTemp_Adapter -> AlarmCtrl  [1]  ;

}
