<!-- (c) https://github.com/MontiCore/monticore -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- == PROJECT COORDINATES ============================================= -->

  <artifactId>montigem-be-rte</artifactId>

  <parent>
    <groupId>de.monticore.montigem</groupId>
    <artifactId>montigem</artifactId>
    <version>0.0.2-SNAPSHOT</version>
  </parent>

  <packaging>war</packaging>

  <!-- == PROJECT PROPERTIES ============================================== -->

  <properties>
    <argLineAddition>-Dfile.encoding=UTF-8</argLineAddition>
    <!-- GENERAL -->
    <tomee.version>7.0.5</tomee.version>
    <openjpa.version>2.4.0</openjpa.version>
    <gson.version>2.8.5</gson.version>
    <shiro.version>1.7.0</shiro.version>
    <org.apache.pdfbox.version>2.0.6</org.apache.pdfbox.version>
    <org.apache.poi.version>3.16</org.apache.poi.version>
    <javax.mail.version>1.9.0-alpha-2</javax.mail.version>
    <mysql.version>8.0.11</mysql.version>
    <org.javamoney.version>1.1</org.javamoney.version>
    <multiproject.basedir>${basedir}/..</multiproject.basedir>
    <!-- JSON -->
    <io.jsonwebtoken.version>0.7.0</io.jsonwebtoken.version>
    <org.apache.commons.version>1.3.2</org.apache.commons.version>
    <!-- PLUGINS -->
    <net.revelc.code.formatter.version>2.7.1</net.revelc.code.formatter.version>
    <org.apache.maven.plugins.version>3.2</org.apache.maven.plugins.version>
    <docker-maven-plugin.version>0.26.1</docker-maven-plugin.version>
    <maven-surefire-plugin.version>2.18.1</maven-surefire-plugin.version>
    <maven-failsafe-plugin.version>2.18</maven-failsafe-plugin.version>
  </properties>

  <!-- == PROJECT METAINFORMATION ========================================= -->

  <name>MontiGem Application Backend</name>
  <description>MontiGem Application Backend Runtime Environment</description>

  <organization>
    <name>Department of Software Engineering, RWTH Aachen University</name>
    <url>http://www.se-rwth.de/</url>
  </organization>

  <!-- == DEPENDENCIES ==================================================== -->
  <dependencies>
    <dependency>
      <groupId>org.apache.pdfbox</groupId>
      <artifactId>pdfbox</artifactId>
      <version>${org.apache.pdfbox.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-ooxml</artifactId>
      <version>${org.apache.poi.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.javamail</groupId>
      <artifactId>geronimo-javamail_1.4_mail</artifactId>
      <version>${javax.mail.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>${mysql.version}</version>
    </dependency>
    <dependency>
      <groupId>org.javamoney</groupId>
      <artifactId>moneta</artifactId>
      <version>${org.javamoney.version}</version>
    </dependency>

    <!-- TOMEE -->
    <dependency>
      <groupId>org.apache.tomee</groupId>
      <artifactId>javaee-api</artifactId>
      <version>${javaee.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.tomee</groupId>
      <artifactId>tomee-embedded</artifactId>
      <version>${tomee.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.tomee</groupId>
      <artifactId>ziplock</artifactId>
      <version>${tomee.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- TESTS -->
    <dependency>
      <groupId>org.apache.tomee</groupId>
      <artifactId>arquillian-tomee-embedded</artifactId>
      <version>${tomee.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- JSON -->
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>${gson.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-core</artifactId>
      <version>${shiro.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-web</artifactId>
      <version>${shiro.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-config-core</artifactId>
      <version>${shiro.version}</version>
    </dependency>
    <dependency>
      <groupId>io.jsonwebtoken</groupId>
      <artifactId>jjwt</artifactId>
      <version>${io.jsonwebtoken.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-io</artifactId>
      <version>${org.apache.commons.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.5</version>
    </dependency>
    <dependency>
      <groupId>org.apache.tomee</groupId>
      <artifactId>openejb-client</artifactId>
      <version>${tomee.version}</version>
    </dependency>
    <dependency>
      <groupId>simple-jndi</groupId>
      <artifactId>simple-jndi</artifactId>
      <version>0.11.4.1</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-yaml</artifactId>
      <version>2.8.5</version>
    </dependency>
    <dependency>
      <groupId>org.yaml</groupId>
      <artifactId>snakeyaml</artifactId>
      <version>1.11</version>
    </dependency>
    <!-- WEBSOCKETS -->
    <dependency>
      <groupId>javax.websocket</groupId>
      <artifactId>javax.websocket-api</artifactId>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>javax</groupId>
      <artifactId>javaee-api</artifactId>
      <version>8.0</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.tomee</groupId>
      <artifactId>openejb-core</artifactId>
      <version>${tomee.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.reflections</groupId>
      <artifactId>reflections</artifactId>
      <version>0.9.11</version>
    </dependency>
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis</artifactId>
      <version>3.4.6</version>
    </dependency>
    <dependency>
      <groupId>org.freemarker</groupId>
      <artifactId>freemarker</artifactId>
      <version>2.3.20</version>
    </dependency>
    <!--dependency>
      <groupId>org.apache.tomcat</groupId>
      <artifactId>tomcat-websocket</artifactId>
      <version>8.5.6</version>
    </dependency-->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-csv</artifactId>
      <version>1.5</version>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-java8</artifactId>
      <version>${hibernate.version}</version>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-envers</artifactId>
      <version>${hibernate.version}</version>
    </dependency>
    <dependency>
      <groupId>org.hibernate.javax.persistence</groupId>
      <artifactId>hibernate-jpa-2.1-api</artifactId>
      <version>1.0.0.Final</version>
      <!-- 			<scope>provided</scope> -->
    </dependency>
  </dependencies>


  <!-- == DEPENDENCY & PLUGIN REPOSITORIES ================================= -->

  <profiles>
    <profile>
      <id>test</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <version>2.2</version>
            <configuration>
              <skip>${maven.main.skip}</skip>
              <webResources>
                <resource>
                  <directory>src/main/webapp-test</directory>
                </resource>
              </webResources>
              <packagingExcludes>WEB-INF/web.xml</packagingExcludes>
              <failOnMissingWebXml>false</failOnMissingWebXml>
              <archive>
                <manifest>
                  <addDefaultImplementationEntries>true
                  </addDefaultImplementationEntries>
                  <addDefaultSpecificationEntries>true
                  </addDefaultSpecificationEntries>
                </manifest>
              </archive>
            </configuration>
          </plugin>
        </plugins>
        <testResources>
          <testResource>
            <directory>src/test/resources-docker</directory>
          </testResource>
        </testResources>
        <resources>
          <resource>
            <directory>src/main/resources</directory>
            <filtering>true</filtering>
            <includes>
              <include>admin.properties</include>
              <include>mail.properties</include>
              <include>**/*.yaml</include>
              <include>**/*.ini</include>
              <include>**/*.xml</include>
              <include>**/*.yml</include>
            </includes>
            <excludes>
              <exclude>devserver.properties</exclude>
              <exclude>testserver.properties</exclude>
            </excludes>
          </resource>
          <resource>
            <directory>src/main/resources</directory>
            <filtering>false</filtering>
          </resource>
        </resources>
      </build>
    </profile>

    <profile>
      <id>prod</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <version>2.2</version>
            <configuration>
              <webResources>
                <resource>
                  <directory>src/main/webapp-prod</directory>
                </resource>
              </webResources>
              <packagingExcludes>WEB-INF/web.xml</packagingExcludes>
              <failOnMissingWebXml>false</failOnMissingWebXml>
              <archive>
                <manifest>
                  <addDefaultImplementationEntries>true
                  </addDefaultImplementationEntries>
                  <addDefaultSpecificationEntries>true
                  </addDefaultSpecificationEntries>
                </manifest>
              </archive>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.6.0</version>
            <executions>
              <execution>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>java</goal>
                </goals>
                <configuration>
                  <skip>${maven.test.skip}</skip>
                  <mainClass>de.montigem.be.database.DatabaseSchemaRetrieval</mainClass>
                  <cleanupDaemonThreads>false</cleanupDaemonThreads>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
        <resources>
          <resource>
            <directory>src/main/resources</directory>
            <filtering>true</filtering>
            <includes>
              <include>admin.properties</include>
              <include>mail.properties</include>
              <include>**/*.yaml</include>
              <include>**/*.yml</include>
              <include>**/*.ini</include>
              <include>**/*.xml</include>
            </includes>
          </resource>
          <resource>
            <directory>src/main/resources</directory>
            <filtering>false</filtering>
          </resource>
        </resources>
      </build>
    </profile>

    <profile>
      <id>devserver</id>
      <properties>
        <skipTests>true</skipTests>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <version>2.2</version>
            <configuration>
              <webResources>
                <resource>
                  <directory>src/main/webapp-prod</directory>
                </resource>
              </webResources>
              <packagingExcludes>WEB-INF/web.xml</packagingExcludes>
              <failOnMissingWebXml>false</failOnMissingWebXml>
              <archive>
                <manifest>
                  <addDefaultImplementationEntries>true
                  </addDefaultImplementationEntries>
                  <addDefaultSpecificationEntries>true
                  </addDefaultSpecificationEntries>
                </manifest>
              </archive>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.6.0</version>
            <executions>
              <execution>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>java</goal>
                </goals>
                <configuration>
                  <skip>${maven.test.skip}</skip>
                  <mainClass>de.montigem.be.database.DatabaseSchemaRetrieval</mainClass>
                  <cleanupDaemonThreads>false</cleanupDaemonThreads>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>

        <resources>
          <resource>
            <directory>src/main/resources</directory>
            <filtering>true</filtering>
            <includes>
              <include>admin.properties</include>
              <include>mail.properties</include>
              <include>devserver.properties</include>
              <include>**/*.yaml</include>
              <include>**/*.ini</include>
              <include>**/*.xml</include>
              <include>**/*.yml</include>
            </includes>
            <excludes>
              <exclude>testserver.properties</exclude>
            </excludes>
          </resource>
          <resource>
            <directory>src/main/resources</directory>
            <filtering>false</filtering>
            <includes>
              <include>**/*.pdf</include>
            </includes>
          </resource>
        </resources>
      </build>
    </profile>

    <profile>
      <id>testserver</id>
      <properties>
        <skipTests>true</skipTests>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <version>2.2</version>
            <configuration>
              <webResources>
                <resource>
                  <directory>src/main/webapp-prod</directory>
                </resource>
              </webResources>
              <packagingExcludes>WEB-INF/web.xml</packagingExcludes>
              <failOnMissingWebXml>false</failOnMissingWebXml>
              <archive>
                <manifest>
                  <addDefaultImplementationEntries>true
                  </addDefaultImplementationEntries>
                  <addDefaultSpecificationEntries>true
                  </addDefaultSpecificationEntries>
                </manifest>
              </archive>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.6.0</version>
            <executions>
              <execution>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>java</goal>
                </goals>
                <configuration>
                  <skip>${maven.test.skip}</skip>
                  <mainClass>de.montigem.be.database.DatabaseSchemaRetrieval</mainClass>
                  <cleanupDaemonThreads>false</cleanupDaemonThreads>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
        <resources>
          <resource>
            <directory>src/main/resources</directory>
            <filtering>true</filtering>
            <includes>
              <include>admin.properties</include>
              <include>mail.properties</include>
              <include>testserver.properties</include>
              <include>**/*.yaml</include>
              <include>**/*.ini</include>
              <include>**/*.xml</include>
              <include>**/*.yml</include>
            </includes>
            <excludes>
              <exclude>devserver.properties</exclude>
            </excludes>
          </resource>
          <resource>
            <directory>src/main/resources</directory>
            <filtering>false</filtering>
            <includes>
              <include>**/*.pdf</include>
            </includes>
          </resource>
        </resources>
      </build>
    </profile>
  </profiles>

  <build>
    <defaultGoal>package</defaultGoal>
    <finalName>montigem-be</finalName>
    <plugins>
      <plugin>
        <groupId>pl.project13.maven</groupId>
        <artifactId>git-commit-id-plugin</artifactId>
        <version>2.2.4</version>
        <executions>
          <execution>
            <id>get-the-git-infos</id>
            <goals>
              <goal>revision</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <dotGitDirectory>${parent.basedir}/.git</dotGitDirectory>
          <prefix>git</prefix>
          <verbose>false</verbose>
          <generateGitPropertiesFile>true</generateGitPropertiesFile>
          <generateGitPropertiesFilename>
            ${project.build.outputDirectory}/montigem.properties
          </generateGitPropertiesFilename>
          <format>properties</format>
          <gitDescribe>
            <skip>false</skip>
            <always>false</always>
            <dirty>-dirty</dirty>
          </gitDescribe>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>0</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-sources/</source>
                <source>${monticonnect.src.dir}</source>
              </sources>
            </configuration>
          </execution>
          <execution>
            <id>1</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-test-sources/</source>
                <source>${project.build.directory}/generated-sources/</source>
                <source>${monticonnect.src.dir}</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>de.se_rwth.maven</groupId>
        <artifactId>se-groovy-maven-plugin</artifactId>
        <version>${se-groovy.maven.version}</version>
        <configuration>
          <skip>${maven.main.skip}</skip>
          <script>backend/scripts/domain.groovy</script>
          <baseClass>configure.DexScript</baseClass>
          <arguments>
            <model>
            	${monticonnect.src.dir}/de/montigem/be/domain/Domain.cd
            </model>
            <out>${project.build.directory}/generated-sources/</out>
            <testOut>${project.build.directory}/generated-test-sources/</testOut>
            <modelPath>${monticonnect.src.dir}</modelPath>
            <handcodedPath>${monticonnect.src.dir};${basedir}/src/main/java;${basedir}/src/test/java
            </handcodedPath>
          </arguments>
        </configuration>
        <executions>
          <execution>
            <id>domain</id>
            <configuration>
              <skip>${maven.main.skip}</skip>
              <script>backend/scripts/domain.groovy</script>
              <baseClass>configure.DexScript</baseClass>
              <arguments>
                <model>
                  ${monticonnect.src.dir}/de/montigem/be/domain/Domain.cd
                </model>
                <ocl>de.montigem.be.domain.DomainConstraints</ocl>
                <out>${project.build.directory}/generated-sources/</out>
                <testOut>${project.build.directory}/generated-test-sources/
                </testOut>
                <modelPath>${monticonnect.src.dir}
                </modelPath>
                <handcodedPath>${monticonnect.src.dir};${basedir}/src/main/java;${basedir}/src/test/java
                </handcodedPath>
              </arguments>
            </configuration>
            <phase>generate-sources</phase>
            <goals>
              <goal>execute</goal>
            </goals>
          </execution>
          <execution>
            <id>aggregates</id>
            <configuration>
              <skip>${maven.main.skip}</skip>
              <script>backend/scripts/aggregates.groovy</script>
              <baseClass>configure.DexScript</baseClass>
              <arguments>
                <models>
                  ${monticonnect.src.dir}/de/montigem/be/system
                </models>
                <cmdmodel>${monticonnect.src.dir}/de/montigem/be/command/Commands.cd</cmdmodel>
                <model>
                ${monticonnect.src.dir}/de/montigem/be/domain/Domain.cd
                </model>
                <out>${project.build.directory}/generated-sources/</out>
                <modelPath>${monticonnect.src.dir}
                </modelPath>
                <handcodedPath>${monticonnect.src.dir};${basedir}/src/main/java</handcodedPath>
              </arguments>
            </configuration>
            <phase>generate-sources</phase>
            <goals>
              <goal>execute</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>de.monticore.montigem</groupId>
            <artifactId>montigem-gtr</artifactId>
            <version>${montigem.version}</version>
          </dependency>
          <dependency>
            <groupId>de.se_rwth.commons</groupId>
            <artifactId>se-commons-utilities</artifactId>
            <version>${se-commons.version}</version>
          </dependency>
        </dependencies>
      </plugin>

      <plugin>
        <groupId>net.revelc.code.formatter</groupId>
        <artifactId>formatter-maven-plugin</artifactId>
        <version>${net.revelc.code.formatter.version}</version>
        <configuration>
          <directories>
            <directory>${project.build.directory}/generated-sources</directory>
            <directory>${project.build.directory}/generated-test-sources</directory>
          </directories>
          <configFile>${project.basedir}/SECodeFormatter.xml</configFile>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>format</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${org.apache.maven.plugins.version}</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
          <!-- <compilerArgument>-J -Xss2048k</compilerArgument>-->
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <version>${maven-war-plugin.version}</version>
        <configuration>
          <packagingExcludes>WEB-INF/web.xml</packagingExcludes>
          <failOnMissingWebXml>false</failOnMissingWebXml>
          <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
            </manifest>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.tomee.maven</groupId>
        <artifactId>tomee-maven-plugin</artifactId>
        <version>${tomee.version}</version>
        <configuration>
          <tomeeHost>localhost</tomeeHost>
          <tomeeHttpPort>8080</tomeeHttpPort>
          <simpleLog>true</simpleLog>
          <tomeeVersion>${tomee.version}</tomeeVersion>
          <tomeeClassifier>plus</tomeeClassifier>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.tomee.maven</groupId>
        <artifactId>tomee-embedded-maven-plugin</artifactId>
        <version>${tomee.version}</version>
        <configuration>
        </configuration>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${docker-maven-plugin.version}</version>
        <configuration>
          <skip>${maven.test.skip}</skip>
          <images>
            <!-- MySQL image -->
            <image>
              <alias>db</alias>
              <name>mysql:latest</name>
              <run>
                <wait>
                  <log>.*port: 3306.*</log>
                  <time>90000</time>
                </wait>
                <env>
                  <MYSQL_ROOT_PASSWORD>pwd</MYSQL_ROOT_PASSWORD>
                  <MYSQL_DATABASE>testdb</MYSQL_DATABASE>
                  <MYSQL_USER>admin</MYSQL_USER>
                  <MYSQL_PASSWORD>pass</MYSQL_PASSWORD>
                  <CONNECT_TIMEOUT>10000</CONNECT_TIMEOUT>
                </env>
                <ports>
                  <port>3306:3306</port>
                </ports>
                <namingStrategy>alias</namingStrategy>
                <tmpfs>
                  <mount>/var/lib/mysql</mount>
                </tmpfs>
              </run>
            </image>
            <image>
              <alias>datasource</alias>
              <name>mysql:latest</name>
              <run>
                <wait>
                  <log>.*port: 3306.*</log>
                  <time>90000</time>
                </wait>
                <env>
                  <MYSQL_ROOT_PASSWORD>pwd</MYSQL_ROOT_PASSWORD>
                  <MYSQL_DATABASE>datasource</MYSQL_DATABASE>
                  <MYSQL_USER>admin</MYSQL_USER>
                  <MYSQL_PASSWORD>pass</MYSQL_PASSWORD>
                  <CONNECT_TIMEOUT>10000</CONNECT_TIMEOUT>
                </env>
                <ports>
                  <port>3305:3306</port>
                </ports>
                <namingStrategy>alias</namingStrategy>
                <tmpfs>
                  <mount>/var/lib/mysql</mount>
                </tmpfs>
              </run>
            </image>
          </images>
          <dockerHost>tcp://localhost:2375</dockerHost>
        </configuration>
        <executions>
          <!--<execution>
            <id>start</id>
            <phase>integration-test</phase>
            <goals>
              <goal>build</goal>
              <goal>start</goal>
            </goals>
          </execution>-->
          <execution>
            <id>start</id>
            <phase>pre-integration-test</phase>
            <goals>
              <!-- "build" should be used to create the images with the artifact -->
              <goal>build</goal>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>stop</id>
            <phase>install</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <!-- Sets the VM argument line used when unit tests are run. -->
          <argLine>${argLineAddition} -Xmx2048m</argLine>
          <excludes>
            <exclude>**/*.java</exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <id>integration-test</id>
            <goals>
              <goal>test</goal>
            </goals>
            <phase>integration-test</phase>
            <configuration>
              <excludes>
                <exclude>none</exclude>
              </excludes>
              <includes>
                <include>**/*.java</include>
              </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven-failsafe-plugin.version}</version>
        <configuration>
          <argLine>${argLineAddition} -Xmx4096m
            -XX:MaxPermSize=512M
            ${itCoverageAgent}
          </argLine>
        </configuration>
        <executions>
          <execution>
            <id>integration-test</id>
            <goals>
              <goal>integration-test</goal>
            </goals>
          </execution>
          <execution>
            <id>verify</id>
            <goals>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
