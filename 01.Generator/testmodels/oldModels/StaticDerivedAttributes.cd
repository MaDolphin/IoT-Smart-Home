/*
 * ******************************************************************************
 * MontiCore Language Workbench, www.monticore.de
 * Copyright (c) 2017, MontiCore, All rights reserved.
 *
 * This project is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3.0 of the License, or (at your option) any later version.
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this project. If not, see <http://www.gnu.org/licenses/>.
 * ******************************************************************************
 */

package testmodels.correct;

classdiagram DerivedStaticAttributes {  

  class TestByte {   
    private derived static byte attrPrivate;
    private derived static byte attrPrivateInitialized = 1;
    protected derived static byte attrProtected;
    protected derived static byte attrProtectedInitialized = 2;
    public derived static byte attrPublic;
    public derived static byte attrPublicInitialized = 3;
    //readonly derived static byte attrReadonly;
    //readonly derived static byte attrReadonlyInitialized = 4;
    derived static byte attrDefault;
    derived static byte attrDefaultInitialized = 5;
  }
  
  class TestByteWrapper {   
    private derived static Byte attrPrivate;
    private derived static Byte attrPrivateInitialized = 1;
    protected derived static Byte attrProtected;
    protected derived static Byte attrProtectedInitialized = 2;
    public derived static Byte attrPublic;
    public derived static Byte attrPublicInitialized = 3;
    //readonly derived static Byte attrReadonly;
    //readonly derived static Byte attrReadonlyInitialized = 4;
    derived static Byte attrDefault;
    derived static Byte attrDefaultInitialized = 5;
  }

  class TestShort {   
    private derived static short attrPrivate;
    private derived static short attrPrivateInitialized = 1;
    protected derived static short attrProtected;
    protected derived static short attrProtectedInitialized = 2;
    public derived static short attrPublic;
    public derived static short attrPublicInitialized = 3;
    //readonly derived static short attrReadonly;
    //readonly derived static short attrReadonlyInitialized = 4;
    derived static short attrDefault;
    derived static short attrDefaultInitialized = 5;
  }
  
  class TestShortWrapper {   
    private derived static Short attrPrivate;
    private derived static Short attrPrivateInitialized = 1;
    protected derived static Short attrProtected;
    protected derived static Short attrProtectedInitialized = 2;
    public derived static Short attrPublic;
    public derived static Short attrPublicInitialized = 3;
    //readonly derived static Short attrReadonly;
    //readonly derived static Short attrReadonlyInitialized = 4;
    derived static Short attrDefault;
    derived static Short attrDefaultInitialized = 5;
  }
 
  class TestInt {   
    private derived static int attrPrivate;
    private derived static int attrPrivateInitialized = 1;
    protected derived static int attrProtected;
    protected derived static int attrProtectedInitialized = 2;
    public derived static int attrPublic;
    public derived static int attrPublicInitialized = 3;
    //readonly derived static int attrReadonly;
    //readonly derived static int attrReadonlyInitialized = 4;
    derived static int attrDefault;
    derived static int attrDefaultInitialized = 5;
  }
  
  class TestInteger {   
    private derived static Integer attrPrivate;
    private derived static Integer attrPrivateInitialized = 1;
    protected derived static Integer attrProtected;
    protected derived static Integer attrProtectedInitialized = 2;
    public derived static Integer attrPublic;
    public derived static Integer attrPublicInitialized = 3;
    //readonly derived static Integer attrReadonly;
    //readonly derived static Integer attrReadonlyInitialized = 4;
    derived static Integer attrDefault;
    derived static Integer attrDefaultInitialized = 5;
  }  
  
  class TestLong {   
    private derived static long attrPrivate;
    private derived static long attrPrivateInitialized = 1l;
    protected derived static long attrProtected;
    protected derived static long attrProtectedInitialized = 2l;
    public derived static long attrPublic;
    public derived static long attrPublicInitialized = 3l;
    //readonly derived static long attrReadonly;
    //readonly derived static long attrReadonlyInitialized = 4l;
    derived static long attrDefault;
    derived static long attrDefaultInitialized = 5l;
  }
  
  class TestLongWrapper {   
    private derived static Long attrPrivate;
    private derived static Long attrPrivateInitialized = 1l;
    protected derived static Long attrProtected;
    protected derived static Long attrProtectedInitialized = 2l;
    public derived static Long attrPublic;
    public derived static Long attrPublicInitialized = 3l;
    //readonly derived static Long attrReadonly;
    //readonly derived static Long attrReadonlyInitialized = 4l;
    derived static Long attrDefault;
    derived static Long attrDefaultInitialized = 5l;
  }

  class TestFloat {   
    private derived static float attrPrivate;
    private derived static float attrPrivateInitialized = 1f;
    protected derived static float attrProtected;
    protected derived static float attrProtectedInitialized = 2f;
    public derived static float attrPublic;
    public derived static float attrPublicInitialized = 3f;
    //readonly derived static float attrReadonly;
    //readonly derived static float attrReadonlyInitialized = 4f;
    derived static float attrDefault;
    derived static float attrDefaultInitialized = 5f;
  }
  
  class TestFloatWrapper {   
    private derived static Float attrPrivate;
    private derived static Float attrPrivateInitialized = 1f;
    protected derived static Float attrProtected;
    protected derived static Float attrProtectedInitialized = 2f;
    public derived static Float attrPublic;
    public derived static Float attrPublicInitialized = 3f;
   // readonly derived static Float attrReadonly;
   // readonly derived static Float attrReadonlyInitialized = 4f;
    derived static Float attrDefault;
    derived static Float attrDefaultInitialized = 5f;
  }
  
  class TestDouble {   
    private derived static double attrPrivate;
    private derived static double attrPrivateInitialized = 1d;
    protected derived static double attrProtected;
    protected derived static double attrProtectedInitialized = 2d;
    public derived static double attrPublic;
    public derived static double attrPublicInitialized = 3d;
    //readonly derived static double attrReadonly;
    //readonly derived static double attrReadonlyInitialized = 4d;
    derived static double attrDefault;
    derived static double attrDefaultInitialized = 5d;
  }
  
  class TestDoubleWrapper {   
    private derived static Double attrPrivate;
    private derived static Double attrPrivateInitialized = 1d;
    protected derived static Double attrProtected;
    protected derived static Double attrProtectedInitialized = 2d;
    public derived static Double attrPublic;
    public derived static Double attrPublicInitialized = 3d;
    //readonly derived static Double attrReadonly;
    //readonly derived static Double attrReadonlyInitialized = 4d;
    derived static Double attrDefault;
    derived static Double attrDefaultInitialized = 5d;
  }
  
  class TestBoolean {   
    private derived static boolean attrPrivate;
    private derived static boolean attrPrivateInitialized = true;
    protected derived static boolean attrProtected;
    protected derived static boolean attrProtectedInitialized = true;
    public derived static boolean attrPublic;
    public derived static boolean attrPublicInitialized = true;
    //readonly derived static boolean attrReadonly;
    //readonly derived static boolean attrReadonlyInitialized = true;
    derived static boolean attrDefault;
    derived static boolean attrDefaultInitialized = true;
  }
  
  class TestBooleanWrapper {   
    private derived static Boolean attrPrivate;
    private derived static Boolean attrPrivateInitialized = true;
    protected derived static Boolean attrProtected;
    protected derived static Boolean attrProtectedInitialized = true;
    public derived static Boolean attrPublic;
    public derived static Boolean attrPublicInitialized = true;
   // readonly derived static Boolean attrReadonly;
   // readonly derived static Boolean attrReadonlyInitialized = true;
    derived static Boolean attrDefault;
    derived static Boolean attrDefaultInitialized = true;
  }
  
  class TestChar {   
    private derived static char attrPrivate;
    private derived static char attrPrivateInitialized = '1';
    protected derived static char attrProtected;
    protected derived static char attrProtectedInitialized = '2';
    public derived static char attrPublic;
    public derived static char attrPublicInitialized = '3';
   // readonly derived static char attrReadonly;
   // readonly derived static char attrReadonlyInitialized = '4';
    derived static char attrDefault;
    derived static char attrDefaultInitialized = '5';
  }
  
  class TestCharacter {   
    private derived static Character attrPrivate;
    private derived static Character attrPrivateInitialized = '1';
    protected derived static Character attrProtected;
    protected derived static Character attrProtectedInitialized = '2';
    public derived static Character attrPublic;
    public derived static Character attrPublicInitialized = '3';
   // readonly derived static Character attrReadonly;
   // readonly derived static Character attrReadonlyInitialized = '4';
    derived static Character attrDefault;
    derived static Character attrDefaultInitialized = '5';
  }
  
  class TestStringWrapper {   
    private derived static String attrPrivate;
    private derived static String attrPrivateInitialized = "1";
    protected derived static String attrProtected;
    protected derived static String attrProtectedInitialized = "2";
    public derived static String attrPublic;
    public derived static String attrPublicInitialized = "3";
   // readonly derived static String attrReadonly;
   // readonly derived static String attrReadonlyInitialized = "4";
    derived static String attrDefault;
    derived static String attrDefaultInitialized = "5";
  }
  
  class ComplexType {   
  }

  class ClassWithComplexTypeAttribute {
    private static derived ComplexType complexTypePrivate;
    protected static derived ComplexType complexTypeProtected;
    public static derived ComplexType complexTypePublic;
    //readonly static derived ComplexType complexTypeReadonly;
    static derived ComplexType complexTypeDefault;
  } 
}
