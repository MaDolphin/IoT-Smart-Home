/*
 * ******************************************************************************
 * MontiCore Language Workbench, www.monticore.de
 * Copyright (c) 2017, MontiCore, All rights reserved.
 *
 * This project is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3.0 of the License, or (at your option) any later version.
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this project. If not, see <http://www.gnu.org/licenses/>.
 * ******************************************************************************
 */

package testmodels.correct;

classdiagram RandomAssocCombinations {
  class Profile {
    String a;
  }

  class Car{
    double b;
  }

  //------------------------------------------------------------------------------------------------------------- unidir
  association Profile (zzzaa) -> (aaazz) Car [1];
  association Profile (yyybb) -> (bbbyy) Car [0..1];
  association Profile (xxxcc) -> (cccxx) Car [*];
  association Profile (wwwdd) -> (dddww) Car [1..*];

  association [1] Profile (zzzzaa) -> (aaaazz) Car [1];
  association [1] Profile (yyyybb) -> (bbbbyy) Car [0..1];
  association [1] Profile (xxxxcc) -> (ccccxx) Car [*];
  association [1] Profile (wwwwdd) -> (ddddww) Car [1..*];

  association [0..1] Profile (zzzzzaa) -> (aaaaazz) Car [1];
  association [0..1] Profile (yyyyybb) -> (bbbbbyy) Car [0..1];
  association [0..1] Profile (xxxxxcc) -> (cccccxx) Car [*];
  association [0..1] Profile (wwwwwdd) -> (dddddww) Car [1..*];

  association [1..*] Profile (zzzzzzaa) -> (aaaaaazz) Car [1];
  association [1..*] Profile (yyyyyybb) -> (bbbbbbyy) Car [0..1];
  association [1..*] Profile (xxxxxxcc) -> (ccccccxx) Car [*];
  association [1..*] Profile (wwwwwwdd) -> (ddddddww) Car [1..*];

  //----------------------------------------------------------------------------------------------------- derived unidir
  association / za Profile -> Car [1];
  association / zaa Profile -> Car [0..1];
  association / zaaa Profile -> Car [*];
  association / zaaaa Profile -> Car [1..*];

  association / zb [1] Profile -> Car [1];
  association / zbb [1] Profile -> Car [0..1];
  association / zbbb [1] Profile -> Car [*];
  association / zbbbb [1] Profile -> Car [1..*];

  association / zc [0..1] Profile -> Car [1];
  association / zcc [0..1] Profile -> Car [0..1];
  association / zccc [0..1] Profile -> Car [*];
  association / zcccc [0..1] Profile -> Car [1..*];

  association / zd [1..*] Profile -> Car [1];
  association / zdd [1..*] Profile -> Car [0..1];
  association / zddd [1..*] Profile -> Car [*];
  association / zdddd [1..*] Profile -> Car [1..*];

  //-------------------------------------------------------------------------------------------------------------- bidir
  association Profile (zzzaaa) <-> (aaazzz) Car [1];
  association Profile (yyybbb) <-> (bbbyyy) Car [0..1];
  association Profile (xxxccc) <-> (cccxxx) Car [*];
  association Profile (wwwddd) <-> (dddwww) Car [1..*];

  association [1] Profile (zzzzaaa) <-> (aaaazzz) Car [1];
  association [1] Profile (yyyybbb) <-> (bbbbyyy) Car [0..1];
  association [1] Profile (xxxxccc) <-> (ccccxxx) Car [*];
  association [1] Profile (wwwwddd) <-> (ddddwww) Car [1..*];

  association [0..1] Profile (zzzzzaaa) <-> (aaaaazzz) Car [1];
  association [0..1] Profile (yyyyybbb) <-> (bbbbbyyy) Car [0..1];
  association [0..1] Profile (xxxxxccc) <-> (cccccxxx) Car [*];
  association [0..1] Profile (wwwwwddd) <-> (dddddwww) Car [1..*];

  association [1..*] Profile (zzzzzzaaa) <-> (aaaaaazzz) Car [1];
  association [1..*] Profile (yyyyyybbb) <-> (bbbbbbyyy) Car [0..1];
  association [1..*] Profile (xxxxxxccc) <-> (ccccccxxx) Car [*];
  association [1..*] Profile (wwwwwwddd) <-> (ddddddwww) Car [1..*];

  //------------------------------------------------------------------------------------------------------ derived bidir
  association / ya Profile -> Car [1];
  association / yaa Profile -> Car [0..1];
  association / yaaa Profile -> Car [*];
  association / yaaaa Profile -> Car [1..*];

  association / yb [1] Profile -> Car [1];
  association / ybb [1] Profile -> Car [0..1];
  association / ybbb [1] Profile -> Car [*];
  association / ybbbb [1] Profile -> Car [1..*];

  association / yc [0..1] Profile -> Car [1];
  association / ycc [0..1] Profile -> Car [0..1];
  association / yccc [0..1] Profile -> Car [*];
  association / ycccc [0..1] Profile -> Car [1..*];

  association / yd [1..*] Profile -> Car [1];
  association / ydd [1..*] Profile -> Car [0..1];
  association / yddd [1..*] Profile -> Car [*];
  association / ydddd [1..*] Profile -> Car [1..*];

  //----------------------------------------------------------------------------------------------------- ordered unidir
//  association Profile (zzza) -> (aaaz) Car [1] <<ordered>>;
//  association Profile (yyyb) -> (bbby) Car [0..1] <<ordered>>;
  association Profile (xxxc) -> (cccx) Car [*] <<ordered>>;
  association Profile (wwwd) -> (dddw) Car [1..*] <<ordered>>;

//  association [1] Profile (zzzza) -> (aaaaz) Car [1] <<ordered>>;
//  association [1] Profile (yyyyb) -> (bbbby) Car [0..1] <<ordered>>;
  association [1] Profile (xxxxc) -> (ccccx) Car [*] <<ordered>>;
  association [1] Profile (wwwwd) -> (ddddw) Car [1..*] <<ordered>>;

//  association [0..1] Profile (zzzzza) -> (aaaaaz) Car [1] <<ordered>>;
//  association [0..1] Profile (yyyyyb) -> (bbbbby) Car [0..1] <<ordered>>;
  association [0..1] Profile (xxxxxc) -> (cccccx) Car [*] <<ordered>>;
  association [0..1] Profile (wwwwwd) -> (dddddw) Car [1..*] <<ordered>>;

//  association [1..*] Profile (zzzzzza) -> (aaaaaaz) Car [1] <<ordered>>;
//  association [1..*] Profile (yyyyyyb) -> (bbbbbby) Car [0..1] <<ordered>>;
  association [1..*] Profile (xxxxxxc) -> (ccccccx) Car [*] <<ordered>>;
  association [1..*] Profile (wwwwwwd) -> (ddddddw) Car [1..*] <<ordered>>;

  //--------------------------------------------------------------------------------------------- derived ordered unidir
//  association / xa Profile -> Car [1] <<ordered>>;
//  association / xaa Profile -> Car [0..1] <<ordered>>;
  association / xaaa Profile -> Car [*] <<ordered>>;
  association / xaaaa Profile -> Car [1..*] <<ordered>>;

//  association / xb [1] Profile -> Car [1] <<ordered>>;
//  association / xbb [1] Profile -> Car [0..1] <<ordered>>;
  association / xbbb [1] Profile -> Car [*] <<ordered>>;
  association / xbbbb [1] Profile -> Car [1..*] <<ordered>>;

//  association / xc [0..1] Profile -> Car [1] <<ordered>>;
//  association / xcc [0..1] Profile -> Car [0..1] <<ordered>>;
  association / xccc [0..1] Profile -> Car [*] <<ordered>>;
  association / xcccc [0..1] Profile -> Car [1..*] <<ordered>>;

//  association / xd [1..*] Profile -> Car [1] <<ordered>>;
//  association / xdd [1..*] Profile -> Car [0..1] <<ordered>>;
  association / xddd [1..*] Profile -> Car [*] <<ordered>>;
  association / xdddd [1..*] Profile -> Car [1..*] <<ordered>>;

  //------------------------------------------------------------------------------------------------------ ordered bidir
//  association Profile (zzz) <-> (aaa) Car [1] <<ordered>>;
//  association Profile (yyy) <-> (bbb) Car [0..1] <<ordered>>;
  association Profile (xxx) <-> (ccc) Car [*] <<ordered>>;
  association Profile (www) <-> (ddd) Car [1..*] <<ordered>>;

//  association [1] Profile (zzzz) <-> (aaaa) Car [1] <<ordered>>;
//  association [1] Profile (yyyy) <-> (bbbb) Car [0..1] <<ordered>>;
  association [1] Profile (xxxx) <-> (cccc) Car [*] <<ordered>>;
  association [1] Profile (wwww) <-> (dddd) Car [1..*] <<ordered>>;

//  association [0..1] Profile (zzzzz) <-> (aaaaa) Car [1] <<ordered>>;
//  association [0..1] Profile (yyyyy) <-> (bbbbb) Car [0..1] <<ordered>>;
  association [0..1] Profile (xxxxx) <-> (ccccc) Car [*] <<ordered>>;
  association [0..1] Profile (wwwww) <-> (ddddd) Car [1..*] <<ordered>>;

//  association [1..*] Profile (zzzzzz) <-> (aaaaaa) Car [1] <<ordered>>;
//  association [1..*] Profile (yyyyyy) <-> (bbbbbb) Car [0..1] <<ordered>>;
  association [1..*] Profile (xxxxxx) <-> (cccccc) Car [*] <<ordered>>;
  association [1..*] Profile (wwwwww) <-> (dddddd) Car [1..*] <<ordered>>;

  //---------------------------------------------------------------------------------------------- derived ordered bidir
//  association / wa Profile -> Car [1] <<ordered>>;
//  association / waa Profile -> Car [0..1] <<ordered>>;
  association / waaa Profile -> Car [*] <<ordered>>;
  association / waaaa Profile -> Car [1..*] <<ordered>>;

//  association / wb [1] Profile -> Car [1] <<ordered>>;
//  association / wbb [1] Profile -> Car [0..1] <<ordered>>;
  association / wbbb [1] Profile -> Car [*] <<ordered>>;
  association / wbbbb [1] Profile -> Car [1..*] <<ordered>>;

//  association / wc [0..1] Profile -> Car [1] <<ordered>>;
//  association / wcc [0..1] Profile -> Car [0..1] <<ordered>>;
  association / wccc [0..1] Profile -> Car [*] <<ordered>>;
  association / wcccc [0..1] Profile -> Car [1..*] <<ordered>>;

//  association / wd [1..*] Profile -> Car [1] <<ordered>>;
//  association / wdd [1..*] Profile -> Car [0..1] <<ordered>>;
  association / wddd [1..*] Profile -> Car [*] <<ordered>>;
  association / wdddd [1..*] Profile -> Car [1..*] <<ordered>>;

  //------------------------------------------------------------------------------------------- qualified ordered unidir
//  association Profile [[b]] (zu) -> (aau) Car [1] <<ordered>>;
//  association Profile [[b]] (yu) -> (bbu) Car [0..1] <<ordered>>;
  association Profile [[b]] (xu) -> (ccu) Car [*] <<ordered>>;
  association Profile [[b]] (wu) -> (ddu) Car [1..*] <<ordered>>;

//  association [1] Profile [[b]] (zzu) -> (aaau) Car [1] <<ordered>>;
//  association [1] Profile [[b]] (yyu) -> (bbbu) Car [0..1] <<ordered>>;
  association [1] Profile [[b]] (xxu) -> (cccu) Car [*] <<ordered>>;
  association [1] Profile [[b]] (wwu) -> (dddu) Car [1..*] <<ordered>>;

//  association [0..1] Profile [[b]] (zzzu) -> (aaaau) Car [1] <<ordered>>;
//  association [0..1] Profile [[b]] (yyyu) -> (bbbbu) Car [0..1] <<ordered>>;
  association [0..1] Profile [[b]] (xxxu) -> (ccccu) Car [*] <<ordered>>;
  association [0..1] Profile [[b]] (wwwu) -> (ddddu) Car [1..*] <<ordered>>;

//  association [1..*] Profile [[b]] (zzzzu) -> (aaaaau) Car [1] <<ordered>>;
//  association [1..*] Profile [[b]] (yyyyu) -> (bbbbbu) Car [0..1] <<ordered>>;
  association [1..*] Profile [[b]] (xxxxu) -> (cccccu) Car [*] <<ordered>>;
  association [1..*] Profile [[b]] (wwwwu) -> (dddddu) Car [1..*] <<ordered>>;

  //----------------------------------------------------------------------------------- derived qualified ordered unidir
//  association / va Profile [[b]] -> Car [1] <<ordered>>;
//  association / vaa Profile [[b]] -> Car [0..1] <<ordered>>;
  association / vaaa Profile [[b]] -> Car [*] <<ordered>>;
  association / vaaaa Profile [[b]] -> Car [1..*] <<ordered>>;

//  association / vb [1] Profile [[b]] -> Car [1] <<ordered>>;
//  association / vbb [1] Profile [[b]] -> Car [0..1] <<ordered>>;
  association / vbbb [1] Profile [[b]] -> Car [*] <<ordered>>;
  association / vbbbb [1] Profile [[b]] -> Car [1..*] <<ordered>>;

//  association / vc [0..1] Profile [[b]] -> Car [1] <<ordered>>;
//  association / vcc [0..1] Profile [[b]] -> Car [0..1] <<ordered>>;
  association / vccc [0..1] Profile [[b]] -> Car [*] <<ordered>>;
  association / vcccc [0..1] Profile [[b]] -> Car [1..*] <<ordered>>;

//  association / vd [1..*] Profile [[b]] -> Car [1] <<ordered>>;
//  association / vdd [1..*] Profile [[b]] -> Car [0..1] <<ordered>>;
  association / vddd [1..*] Profile [[b]] -> Car [*] <<ordered>>;
  association / vdddd [1..*] Profile [[b]] -> Car [1..*] <<ordered>>;

  //-------------------------------------------------------------------------------------------- qualified ordered bidir
//  association Profile [[b]] (zul) <-> (aaul) Car [1] <<ordered>>;
//  association Profile [[b]] (yul) <-> (bbul) Car [0..1] <<ordered>>;
  association Profile [[b]] (xul) <-> (ccul) Car [*] <<ordered>>;
  association Profile [[b]] (wul) <-> (ddul) Car [1..*] <<ordered>>;

//  association [1] Profile [[b]] (zzul) <-> (aaaul) Car [1] <<ordered>>;
//  association [1] Profile [[b]] (yyul) <-> (bbbul) Car [0..1] <<ordered>>;
  association [1] Profile [[b]] (xxul) <-> (cccul) Car [*] <<ordered>>;
  association [1] Profile [[b]] (wwul) <-> (dddul) Car [1..*] <<ordered>>;

//  association [0..1] Profile [[b]] (zzzul) <-> (aaaaul) Car [1] <<ordered>>;
//  association [0..1] Profile [[b]] (yyyul) <-> (bbbbul) Car [0..1] <<ordered>>;
  association [0..1] Profile [[b]] (xxxul) <-> (ccccul) Car [*] <<ordered>>;
  association [0..1] Profile [[b]] (wwwul) <-> (ddddul) Car [1..*] <<ordered>>;

//  association [1..*] Profile [[b]] (zzzzul) <-> (aaaaaul) Car [1] <<ordered>>;
//  association [1..*] Profile [[b]] (yyyyul) <-> (bbbbbul) Car [0..1] <<ordered>>;
  association [1..*] Profile [[b]] (xxxxul) <-> (cccccul) Car [*] <<ordered>>;
  association [1..*] Profile [[b]] (wwwwul) <-> (dddddul) Car [1..*] <<ordered>>;

  //------------------------------------------------------------------------------------ derived qualified ordered bidir
//  association / ua Profile [[b]] -> Car [1] <<ordered>>;
//  association / uaa Profile [[b]] -> Car [0..1] <<ordered>>;
  association / uaaa Profile [[b]] -> Car [*] <<ordered>>;
  association / uaaaa Profile [[b]] -> Car [1..*] <<ordered>>;

//  association / ub [1] Profile [[b]] -> Car [1] <<ordered>>;
//  association / ubb [1] Profile [[b]] -> Car [0..1] <<ordered>>;
  association / ubbb [1] Profile [[b]] -> Car [*] <<ordered>>;
  association / ubbbb [1] Profile [[b]] -> Car [1..*] <<ordered>>;

//  association / uc [0..1] Profile [[b]] -> Car [1] <<ordered>>;
//  association / ucc [0..1] Profile [[b]] -> Car [0..1] <<ordered>>;
  association / uccc [0..1] Profile [[b]] -> Car [*] <<ordered>>;
  association / ucccc [0..1] Profile [[b]] -> Car [1..*] <<ordered>>;

//  association / ud [1..*] Profile [[b]] -> Car [1] <<ordered>>;
//  association / udd [1..*] Profile [[b]] -> Car [0..1] <<ordered>>;
  association / uddd [1..*] Profile [[b]] -> Car [*] <<ordered>>;
  association / udddd [1..*] Profile [[b]] -> Car [1..*] <<ordered>>;
}
