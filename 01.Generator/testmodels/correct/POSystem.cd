/*
 * ******************************************************************************
 * MontiCore Language Workbench, www.monticore.de
 * Copyright (c) 2017, MontiCore, All rights reserved.
 *
 * This project is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3.0 of the License, or (at your option) any later version.
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this project. If not, see <http://www.gnu.org/licenses/>.
 * ******************************************************************************
 */

package testmodels.correct;

classdiagram POSystem {
    class PO{
    String name;
    String campusLink;
    String refNr;
    String version;
  }

  class Prozess{
    String name;
  }

  // module ist final
  class Modul{
    String name;
    int sws;
    int cp;
    String campusLink;
    String refNr;
    String version;
    String verantwortlicher;
    State status;
    String kommentar;
  }

  enum State{
    NEW,
    PENDING,
    OK,
    DEPRECATED;
  }

  class Step {
    String name;
    String kommentar;
  }

  class Pruefungsleistung{
    String name;
    int workload;
    int sws;
    int cp;
    String campusLink;
  }

  class POAnteil{
    String titel;
    String kurzbezeichnung;
    String beschreibung;
  }

  //  Prozess
  association Prozess -> Step [*] <<ordered>>;
  association / Prozess -> (todos) Step [*] <<ordered>>;

  // PO
  association [*] PO (pruefungsordnung) <-> Prozess [*];
  association [0..1] PO (prevVersion) <-> (nextVersion) PO [0..1];
  association [1] PO <-> POAnteil [*];

  // POAnteil
  association [0..1] POAnteil (parent) <-> (children) POAnteil [*];
  association [1] POAnteil <-> (current) Modul [*];

  // modul
  association [*] Modul (children) <-> (parent) Modul [0..1];
  association [0..1] Modul (prevVersion) <-> (nextVersion) Modul [0..1];
  association [1] Modul <-> Pruefungsleistung [*];
}
