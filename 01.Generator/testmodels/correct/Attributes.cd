/*
 * ******************************************************************************
 * MontiCore Language Workbench, www.monticore.de
 * Copyright (c) 2017, MontiCore, All rights reserved.
 *
 * This project is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3.0 of the License, or (at your option) any later version.
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this project. If not, see <http://www.gnu.org/licenses/>.
 * ******************************************************************************
 */

package testmodels.correct;

// TODO: Readonly is not supported by cd4analysis
// TODO: Bug Fixing. No compilable code is generated
classdiagram Attributes {  
 
  class TestByte {   
     byte attrPrivate;
     byte attrPrivateInitialized = 1;
     byte attrProtected;
     byte attrProtectedInitialized = 2;
     byte attrPublic;
     byte attrPublicInitialized = 3;
    //readonly byte attrReadonly;
    //readonly byte attrReadonlyInitialized = 4;
    byte attrDefault;
    byte attrDefaultInitialized = 5;
  }
  
  class TestByteWrapper {   
     Byte attrPrivate;
     Byte attrPrivateInitialized = 1;
     Byte attrProtected;
     Byte attrProtectedInitialized = 2;
     Byte attrPublic;
     Byte attrPublicInitialized = 3;
    //readonly Byte attrReadonly;
    //readonly Byte attrReadonlyInitialized = 4;
    Byte attrDefault;
    Byte attrDefaultInitialized = 5;
  }

  class TestShort {   
     short attrPrivate;
     short attrPrivateInitialized = 1;
     short attrProtected;
     short attrProtectedInitialized = 2;
     short attrPublic;
     short attrPublicInitialized = 3;
    //readonly short attrReadonly;
    //readonly short attrReadonlyInitialized = 4;
    short attrDefault;
    short attrDefaultInitialized = 5;
  }
  
  class TestShortWrapper {   
     Short attrPrivate;
     Short attrPrivateInitialized = 1;
     Short attrProtected;
     Short attrProtectedInitialized = 2;
     Short attrPublic;
     Short attrPublicInitialized = 3;
    //readonly Short attrReadonly;
    //readonly Short attrReadonlyInitialized = 4;
    Short attrDefault;
    Short attrDefaultInitialized = 5;
  }
 
  class TestInt {   
     int attrPrivate;
     int attrPrivateInitialized = 1;
     int attrProtected;
     int attrProtectedInitialized = 2;
     int attrPublic;
     int attrPublicInitialized = 3;
    //readonly int attrReadonly;
    //readonly int attrReadonlyInitialized = 4;
    int attrDefault;
    int attrDefaultInitialized = 5;
  }
  
  class TestInteger {   
     Integer attrPrivate;
     Integer attrPrivateInitialized = 1;
     Integer attrProtected;
     Integer attrProtectedInitialized = 2;
     Integer attrPublic;
     Integer attrPublicInitialized = 3;
   // readonly Integer attrReadonly;
    //readonly Integer attrReadonlyInitialized = 4;
    Integer attrDefault;
    Integer attrDefaultInitialized = 5;
  }  
  
  class TestLong {   
     long attrPrivate;
     long attrPrivateInitialized = 1l;
     long attrProtected;
     long attrProtectedInitialized = 2l;
     long attrPublic;
     long attrPublicInitialized = 3l;
    //readonly long attrReadonly;
    //readonly long attrReadonlyInitialized = 4l;
    long attrDefault;
    long attrDefaultInitialized = 5l;
  }
  
  class TestLongWrapper {   
     Long attrPrivate;
     Long attrPrivateInitialized = 1l;
     Long attrProtected;
     Long attrProtectedInitialized = 2l;
     Long attrPublic;
     Long attrPublicInitialized = 3l;
   // readonly Long attrReadonly;
   // readonly Long attrReadonlyInitialized = (long) 4;
    Long attrDefault;
    Long attrDefaultInitialized = 5l;
  }

  class TestFloat {   
     float attrPrivate;
     float attrPrivateInitialized = 1f;
     float attrProtected;
     float attrProtectedInitialized = 2f;
     float attrPublic;
     float attrPublicInitialized = 3f;
   // readonly float attrReadonly;
   // readonly float attrReadonlyInitialized = 4f;
    float attrDefault;
    float attrDefaultInitialized = 5f;
  }
  
  class TestFloatWrapper {   
     Float attrPrivate;
     Float attrPrivateInitialized = 1f;
     Float attrProtected;
     Float attrProtectedInitialized = 2f;
     Float attrPublic;
     Float attrPublicInitialized = 3f;
  //  readonly Float attrReadonly;
  //  readonly Float attrReadonlyInitialized = 4f;
    Float attrDefault;
    Float attrDefaultInitialized = 5f;
  }
  
  class TestDouble {   
     double attrPrivate;
     double attrPrivateInitialized = 1d;
     double attrProtected;
     double attrProtectedInitialized = 2d;
     double attrPublic;
     double attrPublicInitialized = 3d;
   // readonly double attrReadonly;
   // readonly double attrReadonlyInitialized = 4d;
    double attrDefault;
    double attrDefaultInitialized = 5d;
  }
  
  class TestDoubleWrapper {   
     Double attrPrivate;
     Double attrPrivateInitialized = 1d;
     Double attrProtected;
     Double attrProtectedInitialized = 2d;
     Double attrPublic;
     Double attrPublicInitialized = 3d;
   // readonly Double attrReadonly;
   // readonly Double attrReadonlyInitialized = 4d;
    Double attrDefault;
    Double attrDefaultInitialized = 5d;
  }
  
  class TestBoolean {   
     boolean attrPrivate;
     boolean attrPrivateInitialized = true;
     boolean attrProtected;
     boolean attrProtectedInitialized = true;
     boolean attrPublic;
     boolean attrPublicInitialized = true;
   // readonly boolean attrReadonly;
   // readonly boolean attrReadonlyInitialized = true;
    boolean attrDefault;
    boolean attrDefaultInitialized = true;
  }
  
  class TestBooleanWrapper {   
     Boolean attrPrivate;
     Boolean attrPrivateInitialized = true;
     Boolean attrProtected;
     Boolean attrProtectedInitialized = true;
     Boolean attrPublic;
     Boolean attrPublicInitialized = true;
   // readonly Boolean attrReadonly;
   // readonly Boolean attrReadonlyInitialized = true;
    Boolean attrDefault;
    Boolean attrDefaultInitialized = true;
  }
  
  class TestChar {   
     char attrPrivate;
     char attrPrivateInitialized = '1';
     char attrProtected;
     char attrProtectedInitialized = '2';
     char attrPublic;
     char attrPublicInitialized = '3';
   // readonly char attrReadonly;
   // readonly char attrReadonlyInitialized = '4';
    char attrDefault;
    char attrDefaultInitialized = '5';
  }
  
  class TestCharacter {   
     Character attrPrivate;
     Character attrPrivateInitialized = '1';
     Character attrProtected;
     Character attrProtectedInitialized = '2';
     Character attrPublic;
     Character attrPublicInitialized = '3';
  //  readonly Character attrReadonly;
   // readonly Character attrReadonlyInitialized = '4';
    Character attrDefault;
    Character attrDefaultInitialized = '5';
  }
  
  class TestStringWrapper {   
     String attrPrivate;
     String attrPrivateInitialized = "1";
     String attrProtected;
     String attrProtectedInitialized = "2";
     String attrPublic;
     String attrPublicInitialized = "3";
   // readonly String attrReadonly;
   // readonly String attrReadonlyInitialized = "4";
    String attrDefault;
    String attrDefaultInitialized = "5";
  }
  
  class ComplexType {   
  }

  class ClassWithComplexTypeAttribute {
     ComplexType complexTypePrivate;
     ComplexType complexTypeProtected;
     ComplexType complexTypePublic;
   // readonly ComplexType complexTypeReadonly;
    ComplexType complexTypeDefault;
  } 

}
