/*
 * ******************************************************************************
 * MontiCore Language Workbench, www.monticore.de
 * Copyright (c) 2017, MontiCore, All rights reserved.
 *
 * This project is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3.0 of the License, or (at your option) any later version.
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this project. If not, see <http://www.gnu.org/licenses/>.
 * ******************************************************************************
 */

// Ticket #532(fixed), 587

package useimported; // DR 

import imported.Types.*;

import java.util.Date;

classdiagram ThesisManagement {

  <<user>>
  class Person {
    // leave username and password attributes in place
    String userName;
    Password password; 
    
    // also leave firstName and surName
    <<inList>> String firstName;
    <<inList>> String surName;
    
    // own attributes
    Email email;
    Date birthDate;
  } 

  class Student extends Person {
    String matriculationNumber;
    Float averageGrade;
    Integer overallCreditPoints;
  }
    
  class Lecturer extends Person {
    String title;
    Text resume;
    Boolean isActive;
  }

  class Institution {
    <<inList>> String name;
  }

  class Thesis {
    <<inList>> String title;
    String firstGrade;
    String secondGrade;
  }

  class CourseOfStudy {
    <<inList>> String title;
    <<inList>> String kind;
  }

  class Address {
    String street;
    String number;
    String poCode;
    String city;
  }

  /* 
    leave this class in place, it will serve as entity for group association
  */
  class GroupInternal {
    <<inList>> String groupName;
    String groupDesc;
  }

  /*
      leave thise in place and potentially replace Person by the classname of your user class
  */
  association [*] Person (users) <-> (groups) GroupInternal [*];
  
  association [*] Student (students) <-> (studentOf) CourseOfStudy [*];
  association [1] Student (student) <-> (thesis) Thesis [1];
  association [*] Lecturer (employees) <-> (worksAt) Institution [1]; 
  //association [1] Lecturer (firstReferee) <-> (thesesFirstRef) Thesis [*];
  association [1] Lecturer (firstReferee) <-> (thesesFirstRef) Thesis [*];
  association [1] Lecturer (secondReferee) <-> (thesesSecondRef) Thesis [*];
  composition  [1] Person -> (addresses) Address [1];  
}
