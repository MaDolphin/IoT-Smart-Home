<!-- (c) https://github.com/MontiCore/monticore -->
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>frontend-rte</artifactId>
  <name>FrontendRTE</name>
  <packaging>war</packaging>
  <groupId>de.monticore.montigem</groupId>
  <version>0.0.2-SNAPSHOT</version>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <fe.version>1.4</fe.version>
    <npm.version>5.3.0</npm.version>
    <guidsl.version>0.0.5-SNAPSHOT</guidsl.version>
    <node.version>v8.11.1</node.version>
    <final.name>FrontendRTE</final.name>
    <montigem.version>0.0.2-SNAPSHOT</montigem.version>
    <se-commons-utilities.version>1.7.8-SNAPSHOT</se-commons-utilities.version>
    <se-groovy.maven.version>1.2.2</se-groovy.maven.version>
    <maven.build.timestamp.format>yyyy.MM.dd HH:mm</maven.build.timestamp.format>
    <buildTime>${maven.build.timestamp}</buildTime>
    <sonar.sources>src/app</sonar.sources>
    <sonar.tests>src/tests</sonar.tests>
    <project.custom.basedir>${basedir}/../</project.custom.basedir>
  </properties>

  <profiles>
    <profile>
      <id>prod</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>3.0.0</version>
            <executions>
              <execution>
                <id>0</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>add-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>${project.build.directory}/generated-sources/</source>
                  </sources>
                </configuration>
              </execution>
              <execution>
                <id>1</id>
                <phase>generate-sources</phase>
                <goals>

                  <goal>add-test-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>${project.build.directory}/generated-test-sources/</source>
                  </sources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>de.se_rwth.maven</groupId>
            <artifactId>se-groovy-maven-plugin</artifactId>
            <version>${se-groovy.maven.version}</version>
            <configuration>
              <script>frontend/scripts/domain.groovy</script>
              <baseClass>configure.DexScript</baseClass>
              <arguments>
                <model>${project.custom.basedir}/00.Models/src/main/models/de/montigem/be/domain/Domain.cd</model>
                <ocl>de.montigem.be.domain.DomainConstraints</ocl>
                <out>${project.build.directory}/generated-sources/</out>
                <modelPath>${project.custom.basedir}/00.Models/src/main/models</modelPath>
                <handcodedPath>${basedir}/src/app/shared/architecture/data</handcodedPath>
              </arguments>
            </configuration>
            <executions>
              <execution>
                <id>domain</id>
                <configuration>

                  <skip>${maven.main.skip}</skip>
                  <script>frontend/scripts/domain.groovy</script>
                  <baseClass>configure.DexScript</baseClass>
                  <arguments>
                    <model>${basedir}/../00.Models/src/main/models/de/montigem/be/domain/Domain.cd</model>
                    <ocl>de.montigem.be.domain.DomainConstraints</ocl>
                    <out>${project.build.directory}/generated-sources/</out>
                    <modelPath>${basedir}/../00.Models/src/main/models</modelPath>
                    <handcodedPath>${basedir}/src/app/shared/architecture/data</handcodedPath>
                  </arguments>
                </configuration>
                <phase>generate-sources</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
              </execution>
              <execution>
                <id>aggregates</id>
                <configuration>
                  <skip>${maven.main.skip}</skip>
                  <script>frontend/scripts/aggregates.groovy</script>
                  <baseClass>configure.DexScript</baseClass>
                  <arguments>
                    <models>${basedir}/../00.Models/src/main/models/de/montigem/be/system</models>
                    <cmdmodel>${basedir}/../00.Models/src/main/models/de/montigem/be/command/Commands.cd</cmdmodel>
                    <out>${project.build.directory}/generated-sources/</out>
                    <modelPath>${basedir}/../00.Models/src/main/models</modelPath>
                    <handcodedPath>${basedir}/src/app/shared/architecture/data</handcodedPath>
                  </arguments>
                </configuration>
                <phase>generate-sources</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
              </execution>
            </executions>
            <dependencies>
              <dependency>
                <groupId>de.monticore.montigem</groupId>
                <artifactId>montigem-gtr</artifactId>
                <version>${montigem.version}</version>
              </dependency>
              <dependency>
                <groupId>de.se_rwth.commons</groupId>
                <artifactId>se-commons-utilities</artifactId>
                <version>${se-commons-utilities.version}</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
        <testResources>
          <testResource>
            <directory>src/test/resources-docker</directory>
          </testResource>
        </testResources>
        <resources>
          <resource>
            <directory>src/main/resources</directory>
            <filtering>true</filtering>
            <excludes>
              <exclude>devserver.properties</exclude>
              <exclude>testserver.properties</exclude>
            </excludes>
          </resource>
        </resources>
      </build>
    </profile>
  </profiles>

  <build>
    <finalName>${final.name}</finalName>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.3</version>
          <configuration>
            <source>1.8</source>
            <target>1.8</target>
            <encoding>UTF-8</encoding>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.18.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>2.6</version>
          <configuration>
            <failOnMissingWebXml>false</failOnMissingWebXml>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>3.0.0</version>
          <executions>
            <execution>
              <id>0</id>
              <phase>generate-sources</phase>
              <goals>
                <goal>add-source</goal>
              </goals>
              <configuration>
                <sources>
                  <source>${project.build.directory}/generated-sources/</source>
                </sources>
              </configuration>
            </execution>
            <execution>
              <id>1</id>
              <phase>generate-test-sources</phase>
              <goals>
                <goal>add-test-source</goal>
              </goals>
              <configuration>
                <sources>
                  <source>${project.build.directory}/generated-test-sources/</source>
                </sources>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>de.se_rwth.maven</groupId>
          <artifactId>se-groovy-maven-plugin</artifactId>
          <version>${se-groovy.maven.version}</version>
          <configuration>
            <skip>false</skip>
            <script>frontend/scripts/domain.groovy</script>
            <baseClass>configure.DexScript</baseClass>
            <arguments>
              <model>${project.custom.basedir}/00.Models/src/main/models/de/montigem/be/domain/Domain.cd</model>
              <out>${project.build.directory}/generated-sources/</out>
              <modelPath>${project.custom.basedir}/00.Models/src/main/models</modelPath>
              <handcodedPath>${basedir}/src/app/shared/architecture/data</handcodedPath>
            </arguments>
          </configuration>
          <executions>
            <execution>
              <phase>generate-sources</phase>
              <goals>
                <goal>execute</goal>
              </goals>
            </execution>
          </executions>
          <dependencies>
            <dependency>
              <groupId>de.monticore.montigem</groupId>
              <artifactId>montigem-gtr</artifactId>
              <version>${montigem.version}</version>
            </dependency>
            <dependency>
              <groupId>de.se_rwth.commons</groupId>
              <artifactId>se-commons-utilities</artifactId>
              <version>${se-commons-utilities.version}</version>
            </dependency>
          </dependencies>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>pre clean</id>
            <phase>clean</phase>
            <goals>
              <goal>clean</goal>
            </goals>
            <configuration>
              <excludeDefaultDirectories>true</excludeDefaultDirectories>
              <filesets>
                <fileset>
                  <directory>.</directory>
                  <followSymlinks>false</followSymlinks>
                  <includes>
                    <include>package-lock.json</include>
                  </includes>
                </fileset>
              </filesets>
            </configuration>
          </execution>
          <execution>
            <id>clean target folder</id>
            <phase>verify</phase>
            <goals>
              <goal>clean</goal>
            </goals>
            <configuration>
              <excludeDefaultDirectories>true</excludeDefaultDirectories>
              <filesets>
                <fileset>
                  <directory>target</directory>
                  <followSymlinks>false</followSymlinks>
                  <includes>
                    <include>**/*</include>
                  </includes>
                  <excludes>
                    <exclude>${final.name}.war</exclude>
                    <exclude>generated-sources/**/*</exclude>
                  </excludes>
                </fileset>
              </filesets>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <filesets>
            <fileset>
              <directory>dist</directory>
            </fileset>
            <fileset>
              <directory>node_modules</directory>
            </fileset>
            <fileset>
              <directory>webbapp</directory>
            </fileset>
            <fileset>
              <directory>coverage</directory>
            </fileset>
            <fileset>
              <directory>documentation</directory>
            </fileset>
          </filesets>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <version>${fe.version}</version>
        <executions>
          <execution>
            <id>install-node-and-npm</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
            <configuration>
              <nodeVersion>${node.version}</nodeVersion>
              <npmVersion>${npm.version}</npmVersion>
            </configuration>
          </execution>

          <execution>
            <id>npm install</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <skip>${maven.main.skip}</skip>
              <arguments>install</arguments>
              <npmInheritsProxyConfigFromMaven>false</npmInheritsProxyConfigFromMaven>
            </configuration>
          </execution>

          <execution>
            <id>npm build</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <skip>${maven.main.skip}</skip>
              <arguments>run build</arguments>
              <npmInheritsProxyConfigFromMaven>false</npmInheritsProxyConfigFromMaven>
            </configuration>
          </execution>

          <execution>
            <id>npm test</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <skip>${skipTests}</skip>
              <arguments>run test:chrome:headless</arguments>
              <npmInheritsProxyConfigFromMaven>false</npmInheritsProxyConfigFromMaven>
            </configuration>
          </execution>

          <execution>
            <id>install-node-and-npm generate sources</id>
            <phase>process-sources</phase>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
            <configuration>
              <workingDirectory>formatter</workingDirectory>
              <installDirectory>formatter</installDirectory>
              <nodeVersion>${node.version}</nodeVersion>
              <npmVersion>${npm.version}</npmVersion>
            </configuration>
          </execution>

          <execution>
            <id>npm install generate sources</id>
            <phase>process-sources</phase>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <workingDirectory>formatter</workingDirectory>
              <installDirectory>formatter</installDirectory>
              <skip>${maven.main.skip}</skip>
              <arguments>install</arguments>
              <npmInheritsProxyConfigFromMaven>false</npmInheritsProxyConfigFromMaven>
            </configuration>
          </execution>

          <execution>
            <id>typescript code formatting</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <phase>process-sources</phase>
            <configuration>
              <workingDirectory>formatter</workingDirectory>
              <installDirectory>formatter</installDirectory>
              <arguments>run format</arguments>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <installDirectory>target/node-installation-dir</installDirectory>
          <workingDirectory>${project.basedir}</workingDirectory>
          <skip>${frontend.skip}</skip>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.7</version>
        <executions>
          <execution>
            <id>copy-frontend-src-resources</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.basedir}/target/${final.name}/
              </outputDirectory>
              <resources>
                <resource>
                  <directory>${project.basedir}/dist/</directory>
                  <includes>
                    <include>**/*.*</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.7</version>
        <executions>
          <execution>
            <id>copy-frontend-src-resources</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.basedir}/target/${final.name}/
              </outputDirectory>
              <resources>
                <resource>
                  <directory>${project.basedir}/dist/</directory>
                  <includes>
                    <include>**/*.*</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>0</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-sources/</source>
              </sources>
            </configuration>
          </execution>
          <execution>
            <id>1</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-test-sources/</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>

      <!--generation of the html and ts code by executing main in GUITool-->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.6.0</version>
        <executions>
          <execution>
            <id>generate_guidsl_pages</id>
            <goals>
              <goal>java</goal>
            </goals>
            <phase>generate-sources</phase>
            <configuration>
              <skip>${maven.main.skip}</skip>
              <includePluginDependencies>true</includePluginDependencies>
              <mainClass>guidsl.GUITool</mainClass>
              <arguments>
                <argument>${project.custom.basedir}/00.Models/src/main/models/de/montigem/gui/pages</argument>
                <argument>-hcp</argument>
                <argument>${basedir}/src/app/dashboard</argument>
                <argument>${basedir}/src/app/einstellungen</argument>
                <argument>${basedir}/src/app/beispiele</argument>
                <argument>${basedir}/src/app/guidsl</argument>
                <argument>-out</argument>
                <argument>${basedir}/target/generated-sources/gui</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>generate_guidsl_navigation</id>
            <goals>
              <goal>java</goal>
            </goals>
            <phase>generate-sources</phase>
            <configuration>
              <skip>${maven.main.skip}</skip>
              <includePluginDependencies>true</includePluginDependencies>
              <mainClass>guidsl.GUITool</mainClass>
              <arguments>
                <argument>${project.custom.basedir}/00.Models/src/main/models/de/montigem/gui/navigation</argument>
                <argument>-out</argument>
                <argument>${basedir}/target/generated-sources/navigation</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>de.monticore.lang</groupId>
            <artifactId>guidsl</artifactId>
            <version>${guidsl.version}</version>
          </dependency>
        </dependencies>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
          </execution>
        </executions>

        <configuration>
          <overlays>
            <overlay>
              <skip>${maven.main.skip}</skip>
            </overlay>
          </overlays>
          <failOnMissingWebXml>false</failOnMissingWebXml>
          <warName>${final.name}</warName>
          <webResources>
            <resource>
              <directory>src/app/shared/layout/navigation</directory>
              <filtering>true</filtering>
            </resource>
          </webResources>
        </configuration>
      </plugin>

    </plugins>
  </build>
</project>
